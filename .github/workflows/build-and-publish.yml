name: Build and Publish

on:
  push:
    tags:
      - 'dev-*'
      - 'stag-*'
      - 'prod-*'

jobs:
  build-development:
    if: startsWith(github.ref, 'refs/tags/dev-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd web-app
          npm install

      - name: Create VERSION.txt file for Development
        run: |
          echo "Environment: Development" > web-app/public/VERSION.txt
          echo "Version: ${GITHUB_REF##*/}" >> web-app/public/VERSION.txt
          echo "Commit Hash: $(git rev-parse HEAD)" >> web-app/public/VERSION.txt

      - name: Build Vue.js app for Development
        run: |
          npm run build:development
        working-directory: ./web-app

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Update appsettings.json with DB Connection Strings
        run: |
          sed -i 's|\"EMOConnection\": \"\"|\"EMOConnection\": \"${{ secrets.DB_EMO_DEV }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"CLMConnection\": \"\"|\"CLMConnection\": \"${{ secrets.DB_CLM_DEV }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"StaffConnection\": \"\"|\"StaffConnection\": \"${{ secrets.DB_STAFF_DEV }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"Password\": \"\"|\"Password\": \"${{ secrets.EMAIL_PASSWORD_DEV }}\"|g' ./AppSettingsEnv/appsettings.json
          cp ./AppSettingsEnv/appsettings.json ./AppSettingsEnv/appsettings.Production.json

      - name: Publish .NET application for Development
        run: |
          export ASPNETCORE_ENVIRONMENT=Development
          rm -rf publish
          dotnet publish -c Release -o ./publish

      - name: Get the tag name
        id: tag_name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Zip the publish folder
        run: |
          zip -r "publish-dev-${{ env.TAG_NAME }}.zip" ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "publish-zip-development-${{ env.TAG_NAME }}"
          path: "publish-dev-${{ env.TAG_NAME }}.zip"

  build-staging:
    if: startsWith(github.ref, 'refs/tags/stag-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd web-app
          npm install

      - name: Create VERSION.txt file for Staging
        run: |
          echo "Environment: Staging" > web-app/public/VERSION.txt
          echo "Version: ${GITHUB_REF##*/}" >> web-app/public/VERSION.txt
          echo "Commit Hash: $(git rev-parse HEAD)" >> web-app/public/VERSION.txt

      - name: Build Vue.js app for Staging
        run: |
          npm run build:staging
        working-directory: ./web-app

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Update appsettings.json with DB Connection Strings
        run: |
          sed -i 's|\"EMOConnection\": \"\"|\"EMOConnection\": \"${{ secrets.DB_EMO_STG }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"CLMConnection\": \"\"|\"CLMConnection\": \"${{ secrets.DB_CLM_STG }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"StaffConnection\": \"\"|\"StaffConnection\": \"${{ secrets.DB_STAFF_STG }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"Password\": \"\"|\"Password\": \"${{ secrets.EMAIL_PASSWORD_STG }}\"|g' ./AppSettingsEnv/appsettings.json
          cp ./AppSettingsEnv/appsettings.json ./AppSettingsEnv/appsettings.Production.json

      - name: Publish .NET application for Staging
        run: |
          export ASPNETCORE_ENVIRONMENT=Staging
          rm -rf publish
          dotnet publish -c Release -o ./publish

      - name: Get the tag name
        id: tag_name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Zip the publish folder
        run: |
          zip -r "publish-stag-${{ env.TAG_NAME }}.zip" ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "publish-zip-staging-${{ env.TAG_NAME }}"
          path: "publish-stag-${{ env.TAG_NAME }}.zip"

  build-production:
    if: startsWith(github.ref, 'refs/tags/prod-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd web-app
          npm install

      - name: Create VERSION.txt file for Production
        run: |
          echo "Environment: Production" > web-app/public/VERSION.txt
          echo "Version: ${GITHUB_REF##*/}" >> web-app/public/VERSION.txt
          echo "Commit Hash: $(git rev-parse HEAD)" >> web-app/public/VERSION.txt

      - name: Build Vue.js app for Production
        run: |
          npm run build:production
        working-directory: ./web-app

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Update appsettings.json with DB Connection Strings
        run: |
          sed -i 's|\"EMOConnection\": \"\"|\"EMOConnection\": \"${{ secrets.DB_EMO_PRD }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"CLMConnection\": \"\"|\"CLMConnection\": \"${{ secrets.DB_CLM_PRD }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"StaffConnection\": \"\"|\"StaffConnection\": \"${{ secrets.DB_STAFF_PRD }}\"|g' ./AppSettingsEnv/appsettings.json
          sed -i 's|\"Password\": \"\"|\"Password\": \"${{ secrets.EMAIL_PASSWORD_PRD }}\"|g' ./AppSettingsEnv/appsettings.json
          cp ./AppSettingsEnv/appsettings.json ./AppSettingsEnv/appsettings.Production.json

      - name: Publish .NET application for Production
        run: |
          export ASPNETCORE_ENVIRONMENT=Production
          rm -rf publish
          dotnet publish -c Release -o ./publish

      - name: Get the tag name
        id: tag_name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Zip the publish folder
        run: |
          zip -r "publish-prod-${{ env.TAG_NAME }}.zip" ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "publish-zip-production-${{ env.TAG_NAME }}"
          path: "publish-prod-${{ env.TAG_NAME }}.zip"
